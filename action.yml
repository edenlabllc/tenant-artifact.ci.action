name: Create and upload tenant Artifact
description: Create and upload tenant Artifact to S3 specific bucket by semver.

inputs:
  artifact_version:
    description: Artifact release version, mandatory in SemVer2 mode.
    required: false
  autotag:
    description: Enable auto tagging when merging into target branch.
    required: false
    default: false
  core_aws_region:
    description: AWS region of the AWS account storing artifact in S3.
    required: true
  core_aws_access_key_id:
    description: AWS access key ID of the AWS account storing artifact in S3.
    required: true
  core_aws_secret_key:
    description: AWS secret access key of the AWS account storing artifact in S3.
    required: true
  custom_tenant_name:
    description: Custom tenant name for different client repo.
    required: false
  github_token_repo_full_access:
    description: GitHub token with full access permissions to repositories.
    required: true
    default: ""
  push_tag:
    description: Manual push a tag from the current branch.
    required: false
    default: false
  rmk_version:
    description: RMK version.
    required: false
    default: latest
  rmk_release_skip_context_switch:
    description: Skip context switch for not provisioned cluster.
    required: false
    default: true
  slack_notifications:
    description: Enable Slack notifications.
    required: false
    default: false
  slack_webhook:
    description: URL for Slack webhook (required if slack_notifications=true).
    required: false
    default: ""
  slack_message_release_notes_path:
    description: |
      Path relative to the root of the repository to a file with release notes (required if slack_notifications=true).
      Example:
        docs/release-notes.md
    required: false
    default: ""
  slack_message_details:
    description: |
      Additional information added to the body of the Slack message (only if slack_notifications=true).
    required: false
    default: ""
  update_tenant_environments:
    description: |
      List of tenants and environments for automatically updating the dependency version.
      Example:
      update_tenant_environments: |
        tenant1=env1
        tenant2=env2
    required: false
    default: ""
  update_tenant_workflow_file:
    description: Tenant workflow file with a "on.workflow_dispatch" trigger (only if update_tenant_environments is specified).
    required: false
    default: project-update.yaml

runs:
  using: composite
  steps:
    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install python dependencies
      run: pip install -r .github/actions/tenant-artifact.ci.action/requirements.txt
      shell: bash

    - name: Execute main script
      id: main
      run: python .github/actions/tenant-artifact.ci.action/main.py
      shell: bash
      env:
        INPUT_ARTIFACT_VERSION: ${{ inputs.artifact_version }}
        INPUT_AUTOTAG: ${{ inputs.autotag }}
        INPUT_CORE_AWS_REGION: ${{ inputs.core_aws_region }}
        INPUT_CORE_AWS_ACCESS_KEY_ID: ${{ inputs.core_aws_access_key_id }}
        INPUT_CORE_AWS_SECRET_KEY: ${{ inputs.core_aws_secret_key }}
        INPUT_CUSTOM_TENANT_NAME: ${{ inputs.custom_tenant_name }}
        INPUT_GITHUB_TOKEN_REPO_FULL_ACCESS: ${{ inputs.github_token_repo_full_access }}
        INPUT_PUSH_TAG: ${{ inputs.push_tag }}
        INPUT_RMK_VERSION: ${{ inputs.rmk_version }}
        INPUT_RMK_RELEASE_SKIP_CONTEXT_SWITCH: ${{ inputs.rmk_release_skip_context_switch }}
        INPUT_SLACK_NOTIFICATIONS: ${{ inputs.slack_notifications }}
        INPUT_SLACK_WEBHOOK: ${{ inputs.slack_webhook }}
        INPUT_SLACK_MESSAGE_RELEASE_NOTES_PATH: ${{ inputs.slack_message_release_notes_path }}
        INPUT_SLACK_MESSAGE_DETAILS: ${{ inputs.slack_message_details }}
        INPUT_UPDATE_TENANT_ENVIRONMENTS: ${{ inputs.update_tenant_environments }}
        INPUT_UPDATE_TENANT_WORKFLOW_FILE: ${{ inputs.update_tenant_workflow_file }}
